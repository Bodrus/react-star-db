{"version":3,"sources":["components/error-indicator/error.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spiner/index.js","components/spiner/spiner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","services/dummy-swapi-service.js","components/row/index.js","components/row/row.js","components/error-button/index.js","components/error-button/error-button.js","components/item-details/item-details.js","components/item-details/index.js","components/hoc-helpers/with-data.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helpers/with-swapi-service.js","components/hoc-helpers/compose.js","components/hoc-helpers/with-child-function.js","components/sw-components/person-detals.js","components/sw-components/starship-detals.js","components/sw-components/planet-detals.js","components/item-list/index.js","components/item-list/item-list.js","components/sw-components/item-lists.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starships-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","onServiceChange","react_default","a","createElement","className","react_router_dom","to","onClick","SwapiService","_apiBase","_imgBase","getResource","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","concat","_this","sent","ok","Error","status","json","abrupt","stop","getAllPeople","_callee2","_context2","results","map","_transformPerson","slice","getPerson","_callee3","id","person","_context3","getAllPlanets","_callee4","_context4","_transformPlanet","getPlanet","_callee5","planet","_context5","getAllStarships","_callee6","_context6","_transformStarship","getStarship","_callee7","starship","_context7","_extractId","item","match","image","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","Spiner","ErrorIndicator","src","icon","alt","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","updatePlanet","Math","floor","random","then","catch","updateInterval","this","props","interval","setInterval","clearInterval","_this$state","hasData","spiner","components_spiner","content","random_planet_PlanetView","errorIndicator","components_error_indicator","Component","defaultProps","PlanetView","diametr","Fragment","DummySwapiService","_people","_planets","_starships","getPersonImage","getStarshipImage","getPlanetImage","Row","left","right","ErrorButton","renderError","handelButton","foo","bar","Record","field","label","value","ItemDetails","updateitem","_this$props","itemId","getData","prefProps","_this$props2","data","React","Children","children","child","cloneElement","components_error_button","noData","renderData","withData","View","_Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","key","update","prevProps","_this2","assign","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMetodsToprops","Wrapeped","serviceProps","compose","fncs","comp","reduceRight","acc","fn","withChildFunction","Wrapped","components_item_details","item_details_Record","ItemList","onItemSelected","renderLabel","renderName","PersonList","PlanetList","StarshipList","PeoplePage","selectedItem","components_row","person_detals","planet_detals","StarshipsPage","starship_detals","App","hasError","SwapiServece","DummySwapiServece","components_header","components_random_planet","react_router","path","render","exact","component","PlanetsPage","ReactDOM","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e0690f49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.25b5e3e1.png\";","import Header from './header';\n\nexport default Header;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './header.css';\n\nconst Header = ({ onServiceChange }) => {\n  return (\n    <div className=\"header d-flex\">\n      <h3>\n        <Link to=\"/\">StarDB</Link>\n      </h3>\n      <ul className=\"d-flex\">\n        <li>\n          <Link to=\"/people\">People</Link>\n        </li>\n        <li>\n          <Link to=\"/planets\">Planets</Link>\n        </li>\n        <li>\n          <Link to=\"/starships\">Starships</Link>\n        </li>\n      </ul>\n      <button className=\"btn btn-primary btn-sm\" onClick={onServiceChange}>\n        Change Service\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","export default class SwapiService {\n  _apiBase = 'https://swapi.co/api';\n\n  _imgBase = 'https://starwars-visualguide.com/assets/img';\n\n  getResource = async url => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\n    }\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource('/people/');\n    return res.results.map(this._transformPerson).slice(0, 6);\n  };\n\n  getPerson = async id => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource('/planets/');\n    return res.results.map(this._transformPlanet).slice(0, 6);\n  };\n\n  getPlanet = async id => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource('/starships/');\n    return res.results.map(this._transformStarship).slice(0, 6);\n  };\n\n  getStarship = async id => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  };\n\n  _extractId = item => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformPlanet = planet => {\n    const id = this._extractId(planet);\n    return {\n      id,\n      image: `${this._imgBase}/planets/${id}.jpg`,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  };\n\n  _transformStarship = starship => {\n    const id = this._extractId(starship);\n    return {\n      id,\n      image: `${this._imgBase}/starships/${id}.jpg`,\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    };\n  };\n\n  _transformPerson = person => {\n    const id = this._extractId(person);\n    return {\n      id,\n      image: `${this._imgBase}/characters/${id}.jpg`,\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    };\n  };\n}\n","import Spiner from './spiner';\n\nexport default Spiner;","import React from 'react';\nimport './spiner.css';\n\nconst Spiner = () => {\n  return (\n    <div className=\"lds-css ng-scope\">\n      <div className=\"lds-spinner\">\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n      </div>\n    </div>\n  );\n  \n};\n\nexport default Spiner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './error-indicator.css';\nimport icon from './error.png';\n\n\nconst ErrorIndicator = () => {\n  return (\n    <div className=\"error-indicator\">\n      <img src={icon} alt=\"error icon\"/>\n      <span className=\"ops\">OPS!!!</span>\n      <span>something has gone terribly wrong</span>\n      <span>(but we already sent droids to fix it)</span>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SwapiService from '../../services/swapi-service';\nimport Spiner from '../spiner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n  static defaultProps = {\n    updateInterval: 5000\n  };\n\n  static propTypes = {\n    updateInterval: PropTypes.number\n  };\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  };\n\n  componentDidMount() {\n    const { updateInterval } = this.props;\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, updateInterval);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onPlanetLoaded = planet => {\n    this.setState({ planet, loading: false });\n  };\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 17) + 1;\n    this.swapiService\n      .getPlanet(id)\n      .then(planet => this.onPlanetLoaded(planet))\n      .catch(this.onError);\n  };\n\n  render() {\n    const { planet, loading, error } = this.state;\n\n    const hasData = !(loading || error);\n\n    const spiner = loading ? <Spiner /> : null;\n    const content = hasData ? <PlanetView planet={planet} /> : null;\n    const errorIndicator = error ? <ErrorIndicator /> : null;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        {spiner}\n        {content}\n        {errorIndicator}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ planet }) => {\n  const { id, population, rotationPeriod, diametr, name } = planet;\n\n  return (\n    <>\n      <img\n        className=\"planet-image\"\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n        alt=\"\"\n      />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{diametr}</span>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n","import RandomPlanet from './random-planet';\n\nexport default RandomPlanet;\n","export default class DummySwapiService {\n  _people = [\n    {\n      id: 1,\n      image: 'https://placeimg.com/400/400/nature',\n      name: 'Bilbo Baggins [TEST DATA]',\n      gender: 'male',\n      birthYear: 'long ago',\n      eyeColor: 'dark brown'\n    },\n\n    {\n      id: 2,\n      image: 'https://placeimg.com/400/400/nature',\n      name: 'Frodo Baggins [TEST DATA]',\n      gender: 'male',\n      birthYear: 'long ago',\n      eyeColor: 'dark brown'\n    }\n  ];\n\n  _planets = [\n    {\n      id: 1,\n      image: 'https://placeimg.com/400/500/people',\n      name: 'Earth [TEST DATA]',\n      population: '7.530.000.000',\n      rotationPeriod: '23 hours 56 seconds',\n      diameter: '12.742 km'\n    },\n    {\n      id: 2,\n      image: 'https://placeimg.com/400/500/people',\n      name: 'Venus [TEST DATA]',\n      population: 'not known',\n      rotationPeriod: '243 days',\n      diameter: '12.104 km'\n    }\n  ];\n\n  _starships = [\n    {\n      id: 1,\n      name: 'USS Enterprise [TEST DATA]',\n      image: 'https://placeimg.com/600/400/tech',\n      model: 'NCC-1701-C',\n      manufacturer: 'Northrop Grumman Shipbuilding',\n      costInCredits: 'not known',\n      length: 'approx 300 meters',\n      crew: 1000,\n      passengers: 50,\n      cargoCapacity: 100\n    }\n  ];\n\n  getAllPeople = async () => {\n    return this._people;\n  };\n\n  getPerson = async () => {\n    return this._people[0];\n  };\n\n  getAllPlanets = async () => {\n    return this._planets;\n  };\n\n  getPlanet = async () => {\n    return this._planets[0];\n  };\n\n  getAllStarships = async () => {\n    return this._starships;\n  };\n\n  getStarship = async () => {\n    return this._starships[0];\n  };\n\n  getPersonImage = () => {\n    return 'https://placeimg.com/400/500/people';\n  };\n\n  getStarshipImage = () => {\n    return 'https://placeimg.com/600/400/tech';\n  };\n\n  getPlanetImage = () => {\n    return 'https://placeimg.com/400/400/nature';\n  };\n}\n","import Row from './row';\n\nexport default Row;","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nconst Row = ({ left, right }) => {\n  return (\n    <div className=\"row mb2 people-page\">\n      <div className=\"col-md-6 list-block\">\n        {left}\n      </div>\n      <div className=\"col-md-6\">\n        {right}\n      </div>     \n    </div>\n  );\n};\n\nexport default Row;","import ErrorButton from './error-button';\n\nexport default ErrorButton;","/* eslint-disable no-unused-vars */\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport React, {Component} from 'react';\nimport './error-button.css';\n\nexport default class ErrorButton extends Component {\n  \n  state = {\n  \trenderError: false\n  }\n  \n  handelButton = () => {\n  \tthis.setState({ renderError: true });\n  }\n  \n  render () {\n  \tif (this.state.renderError) {\n  \t\tthis.foo.bar = 0;\n  \t}\n    \n  \treturn (\n  \t\t<button\n  \t\t\tclassName=\"btn btn-danger btn-lg error-button\"\n  \t\t\tonClick={this.handelButton}>\n        Throw Error \n  \t\t</button>\n  \t);\n  }\n}\n\n","/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\n//import SwapiService from '../../services/swapi-service';\nimport Spiner from '../spiner';\nimport ErrorButton from '../error-button';\n\nimport './item-details.css';\n\nconst Record = ({ item, field, label }) => {\n  // во время рендеринга теперь можно пользовать обьект item,\n  // который был добавлен в процессе копирования child\n  const value = item[field] ? item[field] : 'Top secret!!';\n  return (\n    <li className=\"list-group-item\">\n      <span className=\"term\">{label}</span>\n      <span>{value}</span>\n    </li>\n  );\n};\nexport { Record };\n\nexport default class ItemDetails extends Component {\n  componentDidMount() {\n    this.updateitem();\n  }\n\n  componentDidUpdate(prefProps) {\n    const { itemId, getData } = this.props;\n    if (prefProps.itemId !== itemId || prefProps.getData !== getData) {\n      this.setState({ loading: true });\n      this.updateitem(itemId);\n    }\n  }\n\n  state = {\n    item: null,\n    loading: true\n  };\n\n  updateitem = () => {\n    const { itemId, getData } = this.props;\n    if (!itemId) {\n      return;\n    }\n    getData(itemId).then(item =>\n      this.setState({\n        item,\n        loading: false\n      })\n    );\n  };\n\n  render() {\n    const { item, loading } = this.state;\n\n    if (!item) {\n      return <span>Select a item from a list</span>;\n    }\n\n    const { name, image } = item;\n\n    const data = (\n      <div className=\"item-details card\">\n        <img className=\"item-image\" src={image} alt=\"hh\" />\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            {React.Children.map(this.props.children, child => {\n              // копируем елемент и добовляем в него обьект item\n              return React.cloneElement(child, { item });\n            })}\n          </ul>\n          <ErrorButton />\n        </div>\n      </div>\n    );\n\n    const noData = loading ? <Spiner /> : null;\n    const renderData = !loading ? data : null;\n\n    return (\n      <>\n        {noData}\n        {renderData}\n      </>\n    );\n  }\n}\n","import ItemDetails, { Record } from './item-details';\n\nexport default ItemDetails;\nexport { Record };\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Spiner from '../spiner';\nimport ErrorIndicator from '../error-indicator';\n\nconst withData = View => {\n  return class extends Component {\n    state = {\n      data: [],\n      error: false,\n      loading: true\n    };\n\n    onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    componentDidMount() {\n      this.update();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this.props.getData !== prevProps.getData) {\n        this.update();\n      }\n    }\n\n    update() {\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      this.props\n        .getData()\n        .then(data => this.setState({ data, loading: false }))\n        .catch(() => {\n          this.setState({\n            error: true,\n            loading: false\n          });\n        });\n    }\n\n    render() {\n      const { data, loading, error } = this.state;\n\n      if (loading) {\n        return <Spiner />;\n      }\n\n      if (error) {\n        return <ErrorIndicator />;\n      }\n\n      return <View {...this.props} data={data} />;\n    }\n  };\n};\n\nexport default withData;\n","import React from 'react';\n\nconst {\n  Provider: SwapiServiceProvider,\n  Consumer: SwapiServiceConsumer\n} = React.createContext();\n\nexport { SwapiServiceConsumer, SwapiServiceProvider };\n","import React from 'react';\nimport { SwapiServiceConsumer } from '../swapi-service-context';\n\nconst withSwapiService = mapMetodsToprops => Wrapeped => {\n  return props => {\n    return (\n      <SwapiServiceConsumer>\n        {swapiService => {\n          const serviceProps = mapMetodsToprops(swapiService);\n          return <Wrapeped {...props} {...serviceProps} />;\n        }}\n      </SwapiServiceConsumer>\n    );\n  };\n};\n\nexport default withSwapiService;\n","const compose = (...fncs) => comp => {\n  return fncs.reduceRight((acc, fn) => fn(acc), comp);\n};\n\nexport default compose;\n","import React from 'react';\n\nconst withChildFunction = fn => Wrapped => {\n  return props => {\n    return <Wrapped {...props}>{fn}</Wrapped>;\n  };\n};\n\nexport default withChildFunction;\n","import React from 'react';\nimport ItemDetails, { Record } from '../item-details';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst PersonDetals = props => {\n  return (\n    <ItemDetails {...props}>\n      {/* для работы Record ему нужно передать обьект item, который генериреться\n        в Itemlist, для этого я копирую Record и добовляю ему свойство item  */}\n      <Record field=\"gender\" label=\"Gender\" />\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMetodsToProps = swapiService => {\n  return {\n    getData: swapiService.getPerson\n  };\n};\n\nexport default withSwapiService(mapMetodsToProps)(PersonDetals);\n","import React from 'react';\nimport ItemDetails, { Record } from '../item-details';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst StarshipDetals = props => {\n  return (\n    <ItemDetails {...props}>\n      <Record field=\"model\" label=\"Model\" />\n      <Record field=\"length\" label=\"Length\" />\n      <Record field=\"costInCredits\" label=\"Cost\" />\n      <Record field=\"passengers\" label=\"Passengers\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMetodsToProps = swapiService => {\n  return {\n    getData: swapiService.getStarship\n  };\n};\n\nexport default withSwapiService(mapMetodsToProps)(StarshipDetals);\n","import React from 'react';\nimport ItemDetails, { Record } from '../item-details';\nimport { withSwapiService } from '../hoc-helpers';\n\nconst PlanetDetals = props => {\n  return (\n    <ItemDetails {...props}>\n      <Record field=\"population\" label=\"Population\" />\n      <Record field=\"rotationPeriod\" label=\"rotation Period\" />\n      <Record field=\"diameter\" label=\"Diameter\" />\n    </ItemDetails>\n  );\n};\n\nconst mapMetodsToProps = swapiService => {\n  return {\n    getData: swapiService.getPlanet\n  };\n};\nexport default withSwapiService(mapMetodsToProps)(PlanetDetals);\n","import ItemList from './item-list';\n\nexport default ItemList;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nimport './item-list.css';\n\nconst ItemList = props => {\n  const { data, onItemSelected, children: renderLabel } = props;\n\n  return (\n    <ul className=\"item-list list-group\">\n      {data.map(item => {\n        const { id } = item;\n        const label = renderLabel(item);\n\n        return (\n          <li\n            className=\"list-group-item\"\n            key={id}\n            onClick={() => onItemSelected(id)}\n          >\n            {label}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ItemList;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ItemList from '../item-list';\nimport {\n  withData,\n  withSwapiService,\n  withChildFunction,\n  compose\n} from '../hoc-helpers';\n\nconst renderName = ({ name }) => <span>{name}</span>;\n\nconst renderModelAndName = ({ name, model }) => (\n  <span>\n    {name} ({model})\n  </span>\n);\n\nconst mapPersonMetodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPeople\n  };\n};\n\nconst mapPlanetMetodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllPlanets\n  };\n};\n\nconst mapStarshipMetodToProps = swapiService => {\n  return {\n    getData: swapiService.getAllStarships\n  };\n};\n\nconst PersonList = compose(\n  withSwapiService(mapPersonMetodToProps),\n  withData,\n  withChildFunction(renderName)\n)(ItemList);\n\nconst PlanetList = compose(\n  withSwapiService(mapPlanetMetodToProps),\n  withData,\n  withChildFunction(renderName)\n)(ItemList);\n\nconst StarshipList = compose(\n  withSwapiService(mapStarshipMetodToProps),\n  withData,\n  withChildFunction(renderName)\n)(ItemList);\n\nexport { PersonList, PlanetList, StarshipList };\n","import React, { Component } from 'react';\nimport Row from '../row';\nimport { PersonList, PersonDetals } from '../sw-components';\n\nexport default class PeoplePage extends Component {\n  state = {\n    selectedItem: null\n  };\n\n  onItemSelected = selectedItem => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <Row\n        left={<PersonList onItemSelected={this.onItemSelected} />}\n        right={<PersonDetals itemId={selectedItem} />}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Row from '../row';\nimport { PlanetList, PlanetDetals } from '../sw-components';\n\nexport default class PeoplePage extends Component {\n  state = {\n    selectedItem: null\n  };\n\n  onItemSelected = selectedItem => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <Row\n        left={<PlanetList onItemSelected={this.onItemSelected} />}\n        right={<PlanetDetals itemId={selectedItem} />}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Row from '../row';\nimport { StarshipList, StarshipDetals } from '../sw-components';\n\nexport default class StarshipsPage extends Component {\n  state = {\n    selectedItem: null\n  };\n\n  onItemSelected = selectedItem => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <Row\n        left={<StarshipList onItemSelected={this.onItemSelected} />}\n        right={<StarshipDetals itemId={selectedItem} />}\n      />\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorIndicator from '../error-indicator';\nimport SwapiServece from '../../services/swapi-service';\nimport DummySwapiServece from '../../services/dummy-swapi-service';\nimport { PeoplePage, PlanetsPage, StarshipsPage } from '../pages';\n\nimport { SwapiServiceProvider } from '../swapi-service-context';\n\nimport './app.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nexport default class App extends React.Component {\n  state = {\n    hasError: false,\n    swapiService: new SwapiServece()\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  onServiceChange = () => {\n    this.setState(({ swapiService }) => {\n      const Service =\n        swapiService instanceof SwapiServece ? DummySwapiServece : SwapiServece;\n\n      return {\n        swapiService: new Service()\n      };\n    });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return (\n      <SwapiServiceProvider value={this.state.swapiService}>\n        <Router>\n          <div className=\"stardb-app\">\n            <Header onServiceChange={this.onServiceChange} />\n            <RandomPlanet />\n\n            <Route path=\"/\" render={() => <h2>Welkome to StarDB</h2>} exact />\n            <Route path=\"/people\" component={PeoplePage} />\n            <Route path=\"/planets\" component={PlanetsPage} />\n            <Route path=\"/starships\" component={StarshipsPage} />\n          </div>\n        </Router>\n      </SwapiServiceProvider>\n    );\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}